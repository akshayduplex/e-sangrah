<%- include('../../partials/header') %>

	<div class="page-wrapper">
		<div class="content">
			<!-- Breadcrumb -->
			<div class="d-flex align-items-center justify-content-between page-breadcrumb mb-3">
				<div class="my-auto mb-2">
					<h2 class="mb-1">Approval Tracking</h2>
					<nav>
						<ol class="breadcrumb mb-0">
							<li class="breadcrumb-item"><a href="#"><i class="ti ti-smart-home"></i></a></li>
							<li class="breadcrumb-item"><a href="#">Dashboard</a></li>
							<li class="breadcrumb-item">Approval Tracking</li>
						</ol>
					</nav>
				</div>
			</div>

			<div class="dflexbtwn align-items-start">
				<div class="docstatus">
					<h5 class="fs-20 mb-3 fw-medium">Document Status</h5>
					<div class="flxtblleft">
						<span class="avatar rounded bg-light mb-2">
							<img id="doc-icon" src="/img/icons/fn1.png" alt="Document Icon">
						</span>
						<div class="flxtbltxt">
							<p class="fs-14 mb-1 fw-normal text-neutral" id="doc-name">-</p>
							<span class="fs-11 fw-light text-black" id="doc-size">-</span><br>
						</div>
					</div>
					<p class="fs-20 fw-medium" id="doc-submitted">Submitted on: -</p>
					<a id="doc-link" class="btn-primary btn rounded-pill" target="_blank">View File</a>
				</div>

				<div class="progresscard">
					<h5>Approval Progress</h5>
					<div class="progresschart">
						<canvas id="chartprogress" style="height:150px;"></canvas>
					</div>
				</div>
			</div>

			<div class="mt-3 position-relative">
				<div class="approval-tracker">
					<table class="table table-nowrap mb-0">
						<thead>
							<tr>
								<th>Designation</th>
								<th>Name</th>
								<th>Approved On</th>
								<th>Status</th>
								<th>Remark</th>
							</tr>
						</thead>
						<tbody id="approval-table">
							<tr>
								<td colspan="5" class="text-center">Loading approvals...</td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		</div>

		<div class="footer mt-4 d-sm-flex align-items-center justify-content-between border-top bg-white p-3">
			<p class="mb-0">2025 &copy; HLFPPT.</p>
			<p>Designed & Developed by <a href="javascript:void(0);" class="text-primary">Duplex services &
					Technology</a></p>
		</div>
	</div>

	<%- include('../../partials/footer') %>

		<script>
			document.addEventListener('DOMContentLoaded', async () => {
				const pathParts = window.location.pathname.split('/');
				const documentIndex = pathParts.indexOf('document');
				const documentId = documentIndex !== -1 ? pathParts[documentIndex + 1] : null;

				if (!documentId) {
					showToast("Document ID not found in URL", 'error');
					return;
				}
				//Fetch the API dynamically
				try {
					const response = await fetch(`/api/documents/${documentId}/approval/track`);
					if (!response.ok) throw new Error(`HTTP ${response.status}`);
					const data = await response.json();

					const doc = data.document;
					const approvals = data.approvals || [];

					// Fill Document Info
					if (doc.files?.length > 0) {
						const file = doc.files[0];
						document.getElementById('doc-name').innerText = file.originalName || "-";
						document.getElementById('doc-size').innerText = file.fileSize ? `${(file.fileSize / 1024).toFixed(2)} KB` : "-";
						document.getElementById('doc-link').href = file.s3Url || "#";

						const fileType = file.file.split('.').pop().toLowerCase();
						const docIcon = document.getElementById('doc-icon');
						if (fileType === 'ppt' || fileType === 'pptx') docIcon.src = '/img/icons/ppt.png';
						else if (fileType === 'pdf') docIcon.src = '/img/icons/pdf.png';
						else docIcon.src = '/img/icons/fn1.png';
					} else {
						document.getElementById('doc-name').innerText = "-";
						document.getElementById('doc-size').innerText = "-";
					}
					document.getElementById('doc-submitted').innerText = `Submitted on: ${new Date(doc.createdAt).toDateString()}`;
					document.getElementById('doc-link').href = doc.files?.[0]?.s3Url || doc.link || "#";

					//Set Document Icon
					const docIcon = document.getElementById('doc-icon');
					// Set "View File" link dynamically
					if (doc.files?.length) {
						const file = doc.files[0]; // first file
						const fileId = file._id;
						const documentId = doc._id;
						document.getElementById('doc-link').href = `/documents/view/${documentId}/${fileId}`;
					}

					if (doc.files?.length) {
						const fileType = doc.files[0].file.split('.').pop().toLowerCase();
						if (fileType === 'ppt' || fileType === 'pptx') docIcon.src = '/img/icons/ppt.png';
						else if (fileType === 'pdf') docIcon.src = '/img/icons/pdf.png';
						else docIcon.src = '/img/icons/fn1.png';
					}

					// Populate Approvals Table
					// Populate Approvals Table
					const tbody = document.getElementById('approval-table');
					if (approvals.length === 0) {
						tbody.innerHTML = `<tr><td colspan="5" class="text-center">No approvals yet</td></tr>`;
					} else {
						// Sort approvals: Approved first, Pending next, others (if any) last
						approvals.sort((a, b) => {
							const statusPriority = { 'Approved': 1, 'Pending': 2 };
							return (statusPriority[a.status] || 99) - (statusPriority[b.status] || 99);
						});

						tbody.innerHTML = approvals.map(appr => `
        <tr>
            <td class="d-flex align-items-center">
                <div class="role-icon ${appr.status === 'Approved' ? 'done' : 'pending'}">
                    <i class="ti ${appr.status === 'Approved' ? 'ti-circle-check' : 'ti-hourglass-low'}"></i>
                </div>
                <span class="ms-2">${appr.approver?.userDetails?.designation?.name || '-'}</span>
            </td>
            <td>${appr.approver?.name || '-'}</td>
            <td>${appr.approvedOn ? new Date(appr.approvedOn).toDateString() : 'In Review'}</td>
            <td><span class="status-badge status-${appr.status.toLowerCase()}">${appr.status}</span></td>
            <td>${appr.remark || '-'}</td>
        </tr>
    `).join('');
					}
					// Render Approval Progress Chart
					const approvedCount = approvals.filter(a => a.status === 'Approved').length;
					const totalCount = approvals.length;
					const ctx = document.getElementById('chartprogress').getContext('2d');

					new Chart(ctx, {
						type: 'doughnut',
						data: {
							// labels: ['Approved', 'Pending'],
							datasets: [{
								data: [approvedCount, totalCount - approvedCount],
								backgroundColor: ['#28a745', '#ffc107'],
							}]
						},
						options: {
							cutout: '70%',
							plugins: { legend: { display: true } }
						}
					});

				} catch (error) {
					showToast("Failed to load approval tracking data", 'error');
				}
			});
		</script>