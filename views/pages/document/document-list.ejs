<%- include('../../partials/header') %>

    <!-- Page Wrapper -->
    <div class="page-wrapper">
        <div class="content">
            <!-- Breadcrumb -->
            <div class="d-flex align-items-center justify-content-between page-breadcrumb mb-3">
                <div class="my-auto mb-2">
                    <h2 class="mb-1">All Documents ( <span class="totalDoc">10</span> )</h2>
                    <nav>
                        <ol class="breadcrumb mb-0">
                            <li class="breadcrumb-item">
                                <a href="#"><i class="ti ti-smart-home"></i></a>
                            </li>
                            <li class="breadcrumb-item">Dashboard</li>
                            <li class="breadcrumb-item">Report</li>
                            <li class="breadcrumb-item">All Documents</li>
                        </ol>
                    </nav>
                </div>
                <div class="rtbtn">
                    <!-- Search -->
                    <div class="me-auto d-flex align-items-center" id="header-search">
                        <div class="input-group" style="width: 300px;">
                            <input type="text" id="searchInput" class="form-control"
                                placeholder="Search by doc, tag, metadata..">
                            <span class="input-group-text"><i class="ti ti-search"></i></span>
                        </div>
                    </div>
                    <!-- /Search -->
                </div>
            </div>
            <!-- /Breadcrumb -->
            <div class="filter-container mb-3">
                <!-- Row 1: Tabs aligned left -->
                <div class="d-flex flex-wrap gap-2 mb-2">
                    <button type="button" class="btn btn-primary rounded-pill status-tab">All</button>
                    <button type="button" class="btn btn-outline-primary rounded-pill status-tab">Pending</button>
                    <button type="button" class="btn btn-outline-primary rounded-pill status-tab">Rejected</button>
                    <button type="button" class="btn btn-outline-primary rounded-pill status-tab">Approved</button>
                    <button type="button" class="btn btn-outline-primary rounded-pill status-tab">Draft</button>
                    <button type="button" class="btn btn-outline-primary rounded-pill status-tab">Compliance and
                        Retention</button>
                </div>

                <!-- Row 2: Filters & buttons aligned right -->
                <div class="d-flex gap-2 justify-content-end align-items-end">
                    <div class="mb-0">
                        <select id="department" class="form-select select2" style="width: 200px;">
                            <option value="">-- Select Department --</option>
                        </select>
                    </div>
                    <div class=" mb-0">
                        <select id="projectName" class="form-select select2" style="width: 200px;">
                            <option value="">-- Select Project --</option>
                        </select>
                    </div>
                    <div class="mb-0 position-relative">
                        <!-- Filter Button -->
                        <div class="mb-0 position-relative">
                            <!-- Filter Button -->
                            <button class="btn btn-outline-secondary" id="columnFilterBtn">
                                <i class="ti ti-filter"></i>
                            </button>

                            <!-- Filter Dropdown -->
                            <div class="filter-dropdown d-none p-3 border rounded bg-white shadow-sm position-absolute end-0 mt-2"
                                style="z-index: 1050; min-width: 220px;">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="fileName" id="filterFileName"
                                        checked>
                                    <label class="form-check-label" for="filterFileName">File name</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="tags" id="filterTags">
                                    <label class="form-check-label" for="filterTags">Tags</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="metadata" id="filterMetadata"
                                        checked>
                                    <label class="form-check-label" for="filterMetadata">Meta data</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="ownerName"
                                        id="filterOwnerName">
                                    <label class="form-check-label" for="filterOwnerName">Owner name</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="fileType"
                                        id="filterFileType">
                                    <label class="form-check-label" for="filterFileType">File type</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="folderName"
                                        id="filterFolderName" checked>
                                    <label class="form-check-label" for="filterFolderName">Folder name</label>
                                </div>
                                <div class="mt-2 d-flex justify-content-between">
                                    <button class="btn btn-primary btn-sm" id="applyFilter">Apply</button>
                                    <button class="btn btn-sm" id="clearFilter">Clear</button>
                                </div>
                            </div>
                        </div>
                        <!-- Filter dropdown here -->
                    </div>
                    <div class="position-relative mb-0">
                        <input type="text" class="form-control datetimepicker" placeholder="Select date">
                        <span class="input-icon-addon">
                            <i class="ti ti-calendar text-gray-7"></i>
                        </span>
                    </div>
                </div>
            </div>

            <!-- Documents Table -->
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive" id="documentsTableWrapper">
                        <table class="table table-hover datatable" id="documents_table">
                            <thead class="thead-light">
                                <tr>
                                    <th></th>
                                    <th>File Name</th>
                                    <th>Last Modified on</th>
                                    <th>Owner</th>
                                    <th>Department</th>
                                    <th>Project Name</th>
                                    <th>Shared With</th>
                                    <th>Tags</th>
                                    <th>Metadata</th>
                                    <th>Description</th>
                                    <th>Remark</th>
                                    <th>Signature</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody id="documents_table_body"></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /Documents Table -->
    </div>

    <div class="footer mt-4 d-sm-flex align-items-center justify-content-between border-top bg-white p-3">
        <p class="mb-0">2025 &copy; HLFPPT.</p>
        <p>Designed & Developed by <a href="javascript:void(0);" class="text-primary">Duplex services &
                Technology</a></p>
    </div>
    </div>
    <!-- /Page Wrapper -->

    <%- include('../../partials/footer') %>
        <link href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" rel="stylesheet">
        <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
        <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>

        <script>
            (function ($) {
                "use strict";

                const fileIcons = {
                    ppt: "/img/icons/fn1.png",
                    pptx: "/img/icons/fn1.png",
                    doc: "/img/icons/fn2.png",
                    docx: "/img/icons/fn2.png",
                    xls: "/img/icons/fn3.png",
                    xlsx: "/img/icons/fn3.png",
                    pdf: "/img/icons/fn4.png",
                    default: "/img/icons/fn1.png"
                };

                // Initialize Select2 with Clear Option
                function initSelect2(selector, url, textKey) {
                    $(selector).select2({
                        placeholder: `-- Select ${textKey} --`,
                        allowClear: false,
                        ajax: {
                            url,
                            dataType: 'json',
                            delay: 250,
                            data: params => ({ search: params.term }),
                            processResults: data => {
                                const results = [
                                    { id: 'clear', text: `-- Select ${textKey} --` },
                                    ...data.data.map(item => ({ id: item._id, text: item[textKey] }))
                                ];
                                return { results };
                            }
                        }
                    });

                    $(selector).on('select2:select', function (e) {
                        if (e.params.data.id === 'clear') {
                            $(this).val(null).trigger('change');
                        }
                    });
                }

                // Initialize your selects
                initSelect2('#department', `${baseUrl}/api/departments/search`, 'name');
                initSelect2('#projectName', `${baseUrl}/api/projects`, 'projectName');


                // -------------------------
                // Initialize DataTable
                // -------------------------
                const table = $('#documents_table').DataTable({
                    serverSide: true,
                    processing: true,
                    ajax: {
                        url: `${baseUrl}/api/documents`,
                        type: 'GET',
                        data: function (d) {
                            const activeTab = $('.status-tab.btn-primary').text().trim();
                            const searchValue = $('#searchInput').val()?.trim() || '';
                            const selectedDate = $('.datetimepicker').val();
                            return {
                                page: (d.start / d.length) + 1,
                                limit: d.length,
                                status: activeTab === 'All' ? '' : activeTab,
                                department: $('#department').val(),
                                project: $('#projectName').val(),
                                date: selectedDate, // Send date to API
                                search: searchValue,
                            };
                        },
                        dataSrc: function (json) {
                            // Update total doc count
                            $('.totalDoc').text(json.data.pagination.totalDocuments || 0);

                            // Set server-side required values
                            json.recordsTotal = json.data.pagination.totalDocuments || 0;
                            json.recordsFiltered = json.data.pagination.totalDocuments || 0;

                            // Map documents to table rows
                            return (json.data.documents || []).map(doc => renderRow(doc));
                        }
                    },
                    columns: [
                        { title: '', orderable: false },
                        { title: 'File Name' },
                        { title: 'Last Modified on' },
                        { title: 'Owner' },
                        { title: 'Department' },
                        { title: 'Project Name' },
                        { title: 'Shared With' },
                        { title: 'Tags' },
                        { title: 'Metadata' },
                        { title: 'Description' },
                        { title: 'Remark' },
                        { title: 'Signature' },
                        { title: 'Status' }
                    ],
                    searching: false,
                    lengthChange: true,
                    pageLength: 10,
                    lengthMenu: [10, 25, 50, 100],
                    order: [[2, 'desc']],
                    deferRender: true,
                    stateSave: true,
                    dom: 'lfrtip'
                });

                // -------------------------
                // Render each row
                // -------------------------
                function renderRow(doc) {
                    const lastModified = new Date(doc.updatedAt).toLocaleString();
                    const owner = doc.owner?.name || '-';
                    const departmentName = doc.department?.name || '-';
                    const projectName = doc.project?.projectName || '-';
                    const tags = doc.tags?.length ? doc.tags.join(', ') : '-';
                    const description = doc.description
                        ? (() => {
                            const text = doc.description.replace(/<\/?[^>]+(>|$)/g, '');
                            return text.length > 100 ? text.substring(0, 30) + '....' : text;
                        })()
                        : '-';

                    const metadata = doc.metadata ? `${doc.metadata.fileName || '-'}, ${doc.metadata.fileDescription || '-'}` : '-';
                    const sharedWith = doc.sharedWith?.length ? doc.sharedWith.map(sw => sw.user?.name).join(', ') : '-';
                    const statusClass = {
                        'draft': 'bg-soft-info',
                        'pending': 'bg-soft-warning',
                        'approved': 'bg-soft-success',
                        'rejected': 'bg-soft-danger',
                        'underreview': 'bg-soft-warning',
                        'archived': 'bg-soft-secondary'
                    }[(doc.status || '').toLowerCase().replace(/\s+/g, '')] || 'bg-soft-secondary';

                    const filesInfo = doc.files?.[0]
                        ? `<div><img src="${fileIcons[doc.files[0].originalName.split('.').pop().toLowerCase()] || fileIcons.default}" style="height:30px;"> ${doc.files[0].originalName}</div>`
                        : '-';

                    // Dropdown HTML
                    const dropdown = `
                <div class="btn-group" role="group">
                    <button type="button" class="btn border-0" data-bs-toggle="dropdown"><i class="ti ti-settings"></i></button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="${doc.link || '#'}"><i class="ti ti-eye"></i> View</a></li>
                        <li><a class="dropdown-item" href="/documents/edit/${doc._id}"><i class="ti ti-pencil-minus"></i> Edit</a></li>
        <li>
  <a class="dropdown-item share-btn" href="#" data-doc-id="${doc._id}" data-bs-toggle="modal" data-bs-target="#sharedoc-modal">
    <i class="ti ti-share"></i> Share
  </a>
</li>
                        <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#versionhistory-modal"><i class="ti ti-history"></i> Version History</a></li>
                        <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#downloaddoc-modal"><i class="ti ti-download"></i> Download</a></li>
                        <li><a class="dropdown-item btn-delete" href="#" data-id="${doc._id}"><i class="ti ti-trash"></i> Delete</a></li>
                    </ul>
                </div>
            `;

                    return [
                        dropdown,
                        filesInfo,
                        lastModified,
                        owner,
                        departmentName,
                        projectName,
                        sharedWith,
                        tags,
                        metadata,
                        description,
                        doc.remark || '-',
                        doc.signature?.fileUrl ? `<img src="${doc.signature.fileUrl}" style="height:40px;">` : '-',
                        `<span class="badge ${statusClass}">${doc.status}</span>`
                    ];
                }

                // -------------------------
                // Filters & Tabs
                // -------------------------
                $('.status-tab').on('click', function () {
                    $('.status-tab').removeClass('btn-primary').addClass('btn-outline-primary');
                    $(this).removeClass('btn-outline-primary').addClass('btn-primary');
                    table.ajax.reload(); // Only refresh table
                });

                // Department and Project filters - only refresh table
                $('#department, #projectName').on('change', function () {
                    table.ajax.reload(); // Only refresh table
                });

                // Remove the datetimepicker change handler that was causing page refresh
                // Only use the daterangepicker specific events

                // Search input handler
                $('#searchInput').on('input', debounce(() => {
                    table.ajax.reload(); // Only refresh table
                }, 500));

                // Add Enter key support for search
                $('#searchInput').on('keypress', function (e) {
                    if (e.which === 13) {
                        table.ajax.reload(); // Only refresh table
                    }
                });

                function debounce(fn, delay = 500) {
                    let timer;
                    return function (...args) {
                        clearTimeout(timer);
                        timer = setTimeout(() => fn.apply(this, args), delay);
                    };
                }

            })(jQuery);
        </script>

        <!-- <script>
            (function ($) {
                "use strict";

                let currentDocId = null; // Track currently selected document

                // When share modal is about to open
                $('#sharedoc-modal').on('show.bs.modal', function (event) {
                    const button = $(event.relatedTarget); // Button that triggered modal
                    currentDocId = button.data('doc-id'); // Get document ID

                    const modal = $(this);

                    // Clear previous modal inputs
                    modal.find('input[type="text"]').val('');
                    modal.find('select').val('View Only').trigger('change');
                    modal.find('#customDateWrapper').hide();
                    modal.find('input[type="checkbox"]').prop('checked', false);
                    modal.find('.user-accssrow').remove();

                    if (!currentDocId) return;

                    // Fetch current shared users for this document
                    $.ajax({
                        url: `${baseUrl}/api/documents/${currentDocId}`,
                        method: 'GET',
                        success: function (res) {
                            const sharedWith = res.document.sharedWith || [];
                            const wrapper = modal.find('.modal-body');

                            sharedWith.forEach(sw => {
                                const row = `
                        <div class="user-accssrow">
                            <div class="empname_eml">
                                <div class="fw-normal fs-18">${sw.user.name}</div>
                                <small class="fs-16">${sw.user.email}</small>
                            </div>
                            <div class="d-flex align-items-center gap-4">
                                <div class="form-check form-switch">
                                    <label>Download Access</label>
                                    <input class="form-check-input" type="checkbox" ${sw.canDownload ? 'checked' : ''}>
                                </div>
                                <select class="form-select form-select-sm" style="width:100px;">
                                    <option ${sw.accessLevel === 'Edit' ? 'selected' : ''}>Edit</option>
                                    <option ${sw.accessLevel === 'View' ? 'selected' : ''}>View</option>
                                </select>
                                <button class="btn btn-sm btn-outline-danger remove-user">Remove</button>
                            </div>
                        </div>`;
                                wrapper.append(row);
                            });
                        }
                    });
                });

                // Toggle custom date range
                $('#sharedoc-modal input[name="time"]').on('change', function () {
                    if ($(this).attr('id') === 'custom') {
                        $('#customDateWrapper').show();
                    } else {
                        $('#customDateWrapper').hide();
                    }
                });

                // Invite button click
                $('#sharedoc-modal').on('click', '.site-btnmd', function () {
                    const userId = $('#sharedoc-modal input[placeholder="Search user"]').val();
                    const accessLevel = $('#sharedoc-modal select').val();
                    const duration = $('#sharedoc-modal input[name="time"]:checked').attr('id');
                    const customStart = $('#startDate').val();
                    const customEnd = $('#endDate').val();

                    if (!currentDocId || !userId) {
                        alert('Select a user to share with');
                        return;
                    }

                    $.ajax({
                        url: `${baseUrl}/api/documents/share/${currentDocId}`,
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ userId, accessLevel, duration, customStart, customEnd }),
                        success: function () {
                            alert('Document shared successfully!');
                            $('#sharedoc-modal').modal('hide');
                            $('#documents_table').DataTable().ajax.reload(); // Refresh table
                        },
                        error: function (err) {
                            alert(err.responseJSON?.message || 'Failed to share document');
                        }
                    });
                });

                // Remove user dynamically
                $('#sharedoc-modal').on('click', '.remove-user', function () {
                    $(this).closest('.user-accssrow').remove();
                });

            })(jQuery);
        </script> -->