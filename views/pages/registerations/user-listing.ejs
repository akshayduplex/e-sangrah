<%- include('../../partials/header') %>

    <div class="page-wrapper">
        <div class="content">

            <!-- Breadcrumb -->
            <div class="dflexbtwn page-breadcrumb mb-3" id="breadcrumbWrapper">
                <div class="my-auto mb-2">
                    <h2 class="mb-1" id="pageTitle">User List</h2>
                    <nav>
                        <ol class="breadcrumb mb-0" id="breadcrumbNav">
                            <li class="breadcrumb-item">
                                <a href="#"><i class="ti ti-smart-home"></i></a>
                            </li>
                            <li class="breadcrumb-item">User List</li>
                        </ol>
                    </nav>
                </div>
                <div>
                    <a href="/users/register" class="btn btn-primary">
                        <i class="ti ti-plus me-1"></i> Add New User
                    </a>
                </div>
            </div>

            <!-- User List Table -->
            <div class="card" id="userListCard">
                <div class="card-body p-0" id="userListBody">
                    <div class="custom-datatable-filter table-responsive" id="userTableWrapper">
                        <table class="table datatable" id="userTable">
                            <thead class="thead-light">
                                <tr>
                                    <th>Sr No.</th>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Phone</th>
                                    <th>Profile Type</th>
                                    <th>Status</th>
                                    <th>Department</th>
                                    <th>Designation</th>
                                    <th>Last Login</th>
                                    <th>Created At</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody id="userTableBody"></tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Footer -->
            <div class="footer mt-4 d-sm-flex align-items-center justify-content-between border-top bg-white p-3"
                id="footerWrapper">
                <p class="mb-0">2025 &copy; HLFPPT.</p>
                <p>Designed & Developed by
                    <a href="javascript:void(0);" id="devLink" class="text-primary">Duplex Services & Technology</a>
                </p>
            </div>

        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <%- include('../../modals/deleteModal') %>


        <%- include('../../partials/footer') %>

            <link href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" rel="stylesheet">
            <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
            <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>

            <script>$(document).ready(function () {
                    const table = $('#userTable').DataTable({
                        serverSide: true, // server-side processing
                        processing: true, // show loader
                        ajax: {
                            url: `${baseUrl}/api/user`,
                            type: 'GET',
                            dataSrc: function (json) {
                                // Check if API success
                                if (!json.success) return [];
                                // Map users to DataTables format
                                return json.users.map((user, index) => ({
                                    srNo: index + 1,
                                    name: user.name,
                                    email: user.email,
                                    phone: user.phone_number || '-',
                                    profile_type: user.profile_type,
                                    status: user.status,
                                    department: user.userDetails?.department?.name || '-',
                                    designation: user.userDetails?.designation?.name || '-',
                                    lastLogin: user.lastLogin ? new Date(user.lastLogin).toLocaleString() : '-',
                                    createdAt: new Date(user.createdAt).toLocaleString(),
                                    actions: `
                        <a href="/users/edit/${user._id}" class="text-primary me-2"><i class="ti ti-edit"></i></a>
                        <a href="#" class="text-danger btn-delete" data-id="${user._id}"><i class="ti ti-trash"></i></a>
                    `
                                }));
                            }
                        },
                        columns: [
                            { data: 'srNo' },
                            { data: 'name' },
                            { data: 'email' },
                            { data: 'phone' },
                            { data: 'profile_type' },
                            { data: 'status' },
                            { data: 'department' },
                            { data: 'designation' },
                            { data: 'lastLogin' },
                            { data: 'createdAt' },
                            { data: 'actions', orderable: false, searchable: false }
                        ],
                        order: [[9, 'desc']],
                        lengthMenu: [10, 25, 50],
                    });

                    // Debounced search
                    $('#userTable_filter input').off('keyup').on('keyup', debounce(function () {
                        table.search(this.value).draw();
                    }, 500));

                    // Delete user logic
                    $(document).on('click', '.btn-delete', function (e) {
                        e.preventDefault();
                        const deleteUserId = $(this).data('id');
                        $('#confirmDeleteModal').modal('show');

                        $('#confirmDeleteBtn').off('click').on('click', function () {
                            $.ajax({
                                url: `${baseUrl}/api/user/${deleteUserId}`,
                                method: 'DELETE',
                                success: function (res) {
                                    $('#confirmDeleteModal').modal('hide');
                                    if (res.success) {
                                        showToast('User deleted successfully!', 'success');
                                        table.ajax.reload(null, false);
                                    } else {
                                        showToast(res.message || 'Failed to delete user', 'error');
                                    }
                                },
                                error: function () {
                                    $('#confirmDeleteModal').modal('hide');
                                    showToast('Error deleting user', 'error');
                                }
                            });
                        });
                    });

                    function debounce(func, wait) {
                        let timeout;
                        return function (...args) {
                            clearTimeout(timeout);
                            timeout = setTimeout(() => func.apply(this, args), wait);
                        };
                    }
                });
            </script>

            <!-- <script>
let deleteUserId = null;

                $(document).ready(function () {
                    let table;

                    // Fetch users from API
                    $.ajax({
                        url: '/api/user',
                        method: 'GET',
                        success: function (res) {
                            if (!res.success) {
                                alert('Failed to fetch users!');
                                return;
                            }

                            let users = res.users;
                            let tbody = '';
                            users.forEach((user, index) => {
                                let department = user.userDetails?.department?.name || '-';
                                let designation = user.userDetails?.designation?.name || '-';
                                let phone = user.phone_number || '-';
                                let lastLogin = user.lastLogin ? new Date(user.lastLogin).toLocaleString() : '-';
                                let createdAt = new Date(user.createdAt).toLocaleString();

                                tbody += `
                        <tr>
                            <td>${index + 1}</td>
                            <td>${user.name}</td>
                            <td>${user.email}</td>
                            <td>${phone}</td>
                            <td>${user.profile_type}</td>
                            <td>${user.status}</td>
                            <td>${department}</td>
                            <td>${designation}</td>
                            <td>${lastLogin}</td>
                            <td>${createdAt}</td>
                            <td>
                                <a href="/users/edit/${user._id}" class="text-primary me-2" title="Edit">
                                    <i class="ti ti-edit"></i>
                                </a>
                                <a href="#" class="text-danger btn-delete" data-id="${user._id}" title="Delete">
                                    <i class="ti ti-trash"></i>
                                </a>
                            </td>
                        </tr>
                    `;
                            });

                            $('#userTableBody').html(tbody);

                            // Initialize DataTable
                            table = $('#userTable').DataTable({
                                "columnDefs": [
                                    { "orderable": false, "targets": [0, 1, 4, 5, 10] },
                                    { "orderable": true, "targets": [2, 3, 6, 7, 8, 9] }
                                ],
                                "order": []
                            });
                        },
                        error: function (err) {
                            showToast('Error fetching users', 'error');
                        }
                    });

                    // Delete user - open confirmation modal
                    $(document).on('click', '.btn-delete', function (e) {
                        e.preventDefault();
                        deleteUserId = $(this).data('id');
                        $('#confirmDeleteModal').modal('show');
                    });

                    // Handle confirmation delete
                    $('#confirmDeleteBtn').click(function () {
                        if (!deleteUserId) return;

                        $.ajax({
                            url: `/api/user/${deleteUserId}`,
                            method: 'DELETE',
                            success: function (res) {
                                $('#confirmDeleteModal').modal('hide');

                                if (res.success) {
                                    showToast('User deleted successfully!', 'success');

                                    // Remove the deleted row from DataTable
                                    const row = $(`.btn-delete[data-id="${deleteUserId}"]`).closest('tr');
                                    table.row(row).remove().draw(false); // redraw table without full reload

                                    deleteUserId = null;
                                } else {
                                    showToast(res.message || 'Failed to delete user', 'error');
                                }
                            },
                            error: function (err) {
                                $('#confirmDeleteModal').modal('hide');
                                showToast('Error deleting user', 'error');
                            }
                        });
                    });
                });
            </script> -->