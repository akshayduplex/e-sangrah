<%- include('../../partials/header') %>
	<!-- Page Wrapper -->
	<div class="page-wrapper">
		<div class="content">
			<!-- Breadcrumb -->
			<div class="d-flex align-items-center justify-content-between page-breadcrumb mb-3">
				<div class="my-auto mb-2">
					<h2 class="mb-1">Reports</h2>
					<nav>
						<ol class="breadcrumb mb-0">
							<li class="breadcrumb-item">
								<a href="#"><i class="ti ti-smart-home"></i></a>
							</li>
							<li class="breadcrumb-item">
								Dashboard
							</li>
							<li class="breadcrumb-item">
								Reports
							</li>
						</ol>
					</nav>
				</div>
			</div>
			<!-- /Breadcrumb -->

			<div class="row">
				<div class="seprate_crdhdr mb-4">
					<!-- Top Row: Upload Left, Search Right -->
					<div class="d-flex align-items-center justify-content-between mb-3">
						<h4 class="mb-3">Uploaded Documents</h4>
						<!-- Search Right -->
						<div class="position-relative" style="width: 400px;">
							<input type="text" name="q" class="form-control" placeholder="Search user">
							<span class="input-icon-addon">
								<i class="ti ti-search"></i>
							</span>
						</div>
					</div>


					<!-- Filters Section -->
					<div class="d-flex flex-wrap gap-2 align-items-center w-100 justify-content-between">
						<div class="select-dropdown flex-grow-1">
							<select id="roleSelect" class="select w-100">
								<option value="">Select Role</option>
								<% roles.forEach(role=> { %>
									<option value="<%= role %>">
										<%= role.charAt(0).toUpperCase() + role.slice(1) %>
									</option>
									<% }) %>
							</select>
						</div>
						<div class="select-dropdown flex-grow-1">
							<select id="department" class="form-select select2" style="width: 200px;">
								<option value="">-- Select Department --</option>
							</select>
						</div>
						<div class="select-dropdown flex-grow-1">
							<select id="docTypeSelect" class="select w-100">
								<option value="" id="clear">Select Doc type</option> <!-- always visible placeholder -->
								<% docTypes.forEach(doc=> { %>
									<option value="<%= doc.value %>">
										<%= doc.label %>
									</option>
									<% }) %>
							</select>
						</div>
						<div class="select-dropdown flex-grow-1">
							<!-- Select -->
							<select class="select2 w-100" id="designation_select">
								<option value="">Select Designation</option>
								<% designation.forEach(d=> { %>
									<option value="<%= d._id %>">
										<%= d.name.charAt(0).toUpperCase() + d.name.slice(1).toLowerCase() %>
									</option>
									<% }) %>
							</select>
						</div>
						<div class="input-icon-end position-relative flex-grow-1">
							<input type="text" class="form-control datetimepicker" placeholder="Select Date">
							<span class="input-icon-addon">
								<i class="ti ti-calendar text-gray-7"></i>
							</span>
						</div>
					</div>


					<div class="w-100 text-end pt-3">
						<button class="btn btn-primary btn-lg rounded-pill">
							<i class="ti ti-download"></i> Export Report
						</button>
						<p class="sbtxt gap-1 pt-2">XLSX / ODS / CSV / PDF</p>
					</div>
				</div>

				<div class="col-xxl-12 col-xl-12">
					<div class="card flex-fill">
						<div class="card-body p-0">
							<div class="custom-datatable-filter table-responsive">
								<table id="documentsTable" class="table datatable">
									<thead>
										<tr>
											<th>File Name</th>
											<th>Owner</th>
											<th>Designation</th>
											<th>Department</th>
											<th>Role</th>
											<th>Approver</th>
											<th>Last Modified On</th>
											<th>Tags</th>
											<th>Meta data</th>
											<th>Shared with</th>
											<th>Created on</th>
											<th>Description</th>
											<th>Signature</th>
											<th>Status</th>
										</tr>
									</thead>
									<tbody>
									</tbody>
								</table>

							</div>
						</div>
					</div>
				</div>
				<!-- /Projects -->
			</div>

		</div>

		<div class="footer mt-4 d-sm-flex align-items-center justify-content-between border-top bg-white p-3">
			<p class="mb-0">2025 &copy; HLFPPT.</p>
			<p>Designed & Developed by <a href="javascript:void(0);" class="text-primary">Duplex services &
					Technology</a></p>
		</div>

	</div>
	<!-- /Page Wrapper -->



	<!-- Bootstrap 5 Modal -->
	<div class="modal fade" id="approvalModal" tabindex="-1" aria-labelledby="approvalModalLabel" aria-hidden="true">
		<div class="modal-dialog modal-lg modal-dialog-centered">
			<div class="modal-content rounded-4 shadow">
				<div class="modal-header border-0 pt-4 pb-0">
					<h5 class="modal-title fw-bold" id="approvalModalLabel">Action Approval Request</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>

				<div class="modal-body">
					<!-- Request Info -->
					<p class="fs-16"><i class="ti ti-user"></i> <strong>Arun</strong> has requested for the document
						approvals</p>

					<div class="d-flex justify-content-between align-items-center mb-3">
						<div class="flxtblleft">
							<span class="avatar rounded bg-light mb-2">
								<img src="assets/img/icons/fn1.png">
							</span>
							<div class="flxtbltxt">
								<p class="fs-14 mb-1 fw-normal text-neutral">Project Proposal v1<span
										class="text-success">+2</span></p>
								<span class="fs-11 fw-light text-black">190KB</span>
							</div>
						</div>
						<a href="#" class="text-primary fs-16 text-primary">View File</a>
					</div>

					<p class="fs-16 small mb-1">Approval Request on <strong class="fw-semibold">July 17th, 2025</strong>
					</p>

					<!-- Description -->
					<div class="mb-3">
						<label class="form-label fs-16 fw-semibold">Description</label>
						<textarea class="form-control text-left rounded" rows="2"
							readonly>This document is about the project proposal which need to sent to the client</textarea>
					</div>

					<!-- Approve/Decline -->
					<div class="approval-switch d-flex mb-3">
						<button type="button" class="btn flex-fill border-0 py-2 active" id="approveBtn">
							<i class="ti ti-circle-check me-1"></i> Approve
						</button>
						<button type="button" class="btn flex-fill border-0 py-2" id="declineBtn">
							<i class="ti ti-circle-x me-1"></i> Decline
						</button>
					</div>

					<!-- Compliance & Expiry -->
					<div class="row mb-3">
						<div class="col">
							<p class="mb-1 fs-16">Compliance and Retention File</p>
							<p>Yes</p>
						</div>
						<div class="col">
							<p class="mb-1 fs-16">Expiry Date</p>
							<p>21st August 2025</p>
						</div>
					</div>

					<!-- Comment -->
					<div class="mb-3">
						<label class="fs-16 mb-2">Leave a comment (optional)</label>
						<textarea class="form-control" rows="2"></textarea>
					</div>

					<p class="text-muted fs-16 ">Arun and other approver members will be notified</p>
				</div>

				<div class="modal-footer border-0 pb-4">
					<button type="button" class="btn btn-lg btn-light rounded-pill px-4"
						data-bs-dismiss="modal">Cancel</button>
					<button type="button" class="btn btn-lg btn-success rounded-pill px-4">Approve</button>
				</div>
			</div>
		</div>
	</div>

	<%- include('../../partials/footer') %>
		<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
		<script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
		<script>
			$(document).ready(function () {
				// -------------------------
				// Initialize Select2 with Clear Option
				// -------------------------
				function initSelect2(selector, url, textKey) {
					$(selector).select2({
						placeholder: `-- Select Department --`,
						allowClear: true,
						ajax: {
							url: url,
							dataType: 'json',
							delay: 250,
							data: params => ({ search: params.term }),
							processResults: data => {

								const results = [
									{ id: '', text: `-- Select Department --` },
									...data.data.map(item => ({
										id: item._id,
										text: item[textKey]
											.split(' ')
											.map(w => w.charAt(0).toUpperCase() + w.slice(1))
											.join(' ') // Capitalize each word
									}))
								];

								return { results };
							}
						}
					});

					// Handle empty selection
					$(selector).on('select2:select', function (e) {
						if (!e.params.data.id) {
							$(this).val(null).trigger('change');
						}
					});
				}

				initSelect2('#department', `${baseUrl}/api/departments/search`, 'name');
				$('#docTypeSelect').select2({
					placeholder: "Select Doc type",
					allowClear: false,              // no "x" button
					width: '100%',
					minimumResultsForSearch: 0,
					sorter: function (data) {
						// Keep placeholder at top
						return data.sort(function (a, b) {
							if (a.id === "") return -1; // always first
							if (b.id === "") return 1;
							return a.text.localeCompare(b.text);
						});
					}
				});

				// Handle selecting the placeholder to clear selection
				$('#clear').on('select2:select', function (e) {
					if ($(this).val() === "") {   // placeholder selected
						$(this).val(null).trigger('change.select2'); // reset selection
						console.log("Selection cleared via placeholder");
					}
				});

				$('#designation_select').select2({
					placeholder: 'Select Designation',
					allowClear: true
				});
				$('#roleSelect').select2({
					placeholder: "Select Role"
				});
				$('#documentsTable').DataTable({
					processing: true,
					serverSide: true,
					pageLength: 10,  // rows per page
					lengthMenu: [10, 25, 50, 100],
					ajax: {
						url: `${baseUrl}/api/documents`,
						type: 'GET',
						data: function (d) {
							// Convert DataTables params to your API query
							return {
								page: Math.ceil(d.start / d.length) + 1,
								limit: d.length,
								search: d.search.value,
								orderColumn: d.order.length ? d.order[0].column + 1 : undefined,
								orderDir: d.order.length ? d.order[0].dir : undefined
							};
						},
						dataSrc: function (json) {
							// Update DataTables paging info
							json.recordsTotal = json.data.pagination.totalDocuments;
							json.recordsFiltered = json.data.pagination.totalDocuments;

							// Map API data to table rows
							return json.data.documents.map(doc => ({
								fileName: `${doc.metadata.fileName} <br><small>${doc.files[0]?.fileSize ? (doc.files[0].fileSize / 1024).toFixed(2) + ' KB' : ''}</small>`,
								owner: doc.owner?.name || '',
								designation: doc.owner?.designation || '',
								department: doc.department?.name || '',
								role: 'Admin', // Adjust if needed
								approver: doc.projectManager || '',
								lastModified: new Date(doc.updatedAt).toLocaleString(),
								tags: doc.tags.join(', '),
								metadata: doc.metadata.fileDescription || '',
								sharedWith: doc.sharedWithUsers.map(u => u.name).join(', '),
								createdOn: new Date(doc.createdAt).toLocaleString(),
								description: doc.description.replace(/<\/?[^>]+(>|$)/g, ""),
								signature: `<img src="${doc.signature?.fileUrl || ''}" class="signimg" />`,
								status: `<span class="status-badge bg-soft-success">${doc.status}</span>`
							}));
						}
					},
					columns: [
						{ data: 'fileName' },
						{ data: 'owner' },
						{ data: 'designation' },
						{ data: 'department' },
						{ data: 'role' },
						{ data: 'approver' },
						{ data: 'lastModified' },
						{ data: 'tags' },
						{ data: 'metadata' },
						{ data: 'sharedWith' },
						{ data: 'createdOn' },
						{ data: 'description' },
						{ data: 'signature' },
						{ data: 'status' }
					],
					order: [[6, 'desc']] // default sort by Last Modified
				});
			});
		</script>